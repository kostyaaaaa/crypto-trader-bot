name: CI - Build and Test All Projects

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # Test Server Project (TypeScript)
  test-server:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install all workspace dependencies
        run: npm ci

      - name: Build server
        run: npm run build --workspace=server

      - name: Verify TypeScript types for server
        run: npx tsc --noEmit --project ./server/tsconfig.json

      - name: Verify build output
        run: |
          if [ -d "server/dist" ]; then
            echo "‚úÖ Server build successful - dist folder created"
            ls -la server/dist/
          else
            echo "‚ùå Server build failed - dist folder not found"
            exit 1
          fi

  # Test Crypto Trader Console (React/TypeScript)
  test-console:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./crypto-trader-console

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './crypto-trader-console/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript compilation
        run: npx tsc -b --noEmit

      - name: Run ESLint
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          if [ -d "dist" ]; then
            echo "‚úÖ Build successful - dist folder created"
            ls -la dist/
          else
            echo "‚ùå Build failed - dist folder not found"
            exit 1
          fi

  # Test Crypto Trader DB Package (TypeScript)
  test-crypto-trader-db:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install all workspace dependencies
        run: npm ci

      - name: Build crypto-trader-db package
        run: npm run build --workspace=crypto-trader-db

      - name: Verify TypeScript types for crypto-trader-db
        run: npx tsc --noEmit --project ./packages/crypto-trader-db/tsconfig.json

      - name: Verify build output
        run: |
          if [ -d "packages/crypto-trader-db/dist" ]; then
            echo "‚úÖ Crypto Trader DB build successful - dist folder created"
            ls -la packages/crypto-trader-db/dist/
          else
            echo "‚ùå Crypto Trader DB build failed - dist folder not found"
            exit 1
          fi

  # Test Trader Bot Project
  test-trader-bot:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./trader-bot

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './trader-bot/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Check JavaScript syntax
        run: |
          echo "Checking syntax for all JavaScript files..."
          find src -name "*.js" -exec node --check {} \;

      - name: Verify trader bot can start (dry run)
        run: |
          echo "Verifying trader bot entry point..."
          node --check src/index.js
          echo "‚úÖ Trader bot syntax check passed"

  # Summary job that depends on all others
  ci-complete:
    runs-on: ubuntu-latest
    needs: [test-server, test-console, test-crypto-trader-db, test-trader-bot]

    steps:
      - name: All checks passed
        run: |
          echo "üéâ All projects passed compilation and build checks!"
          echo "‚úÖ Server: TypeScript compiled and built successfully"
          echo "‚úÖ Console: TypeScript compiled, linted, and built successfully"  
          echo "‚úÖ Crypto Trader DB: TypeScript compiled and built successfully"
          echo "‚úÖ Trader Bot: JavaScript syntax validated"
          echo ""
          echo "Ready for merge! üöÄ"
