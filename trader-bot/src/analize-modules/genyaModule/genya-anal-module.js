import { EMA, RSI } from '../../utils/getEMAAndRSI.js';

export async function genyaTrendModule(symbol = 'ETHUSDT', candles = []) {
  if (!candles || candles.length < 21) {
    console.log(
      `‚è≥ –õ–∏—à–µ ${candles?.length || 0} —Å–≤—ñ—á–æ–∫ –¥–ª—è ${symbol}, –ø–æ—Ç—Ä—ñ–±–Ω–æ ‚â•21...`,
    );
    return null;
  }

  const lastCandles = candles.slice(-21);

  const closes = lastCandles.map((c) => c.close);
  const volumes = lastCandles.map((c) => Number(c.volume ?? 0));

  // üìä –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏
  const emaFast = EMA(closes, 9, { seed: 'sma' });
  const emaSlow = EMA(closes, 21, { seed: 'sma' });
  const rsi = RSI(closes, 14);

  const avgVolume = volumes.reduce((sum, num) => sum + num, 0) / volumes.length;
  const lastVolume = volumes[volumes.length - 1];

  // üîπ –£–º–æ–≤–∏ —Ç—Ä–µ–Ω–¥—É
  const trendUp = emaFast > emaSlow;
  const trendDown = emaFast < emaSlow;
  const strongVolume = lastVolume > avgVolume;

  let signal = 'NEUTRAL';
  let reason = '–ù–µ–º–∞—î —á—ñ—Ç–∫–æ–≥–æ —Ç—Ä–µ–Ω–¥—É';

  // üîπ –§—ñ–ª—å—Ç—Ä –ø–æ RSI
  if (rsi > 70) {
    signal = 'OVERBOUGHT';
    reason = 'RSI > 70, —Ä–∏–Ω–æ–∫ –ø–µ—Ä–µ–≥—Ä—ñ—Ç–∏–π, –ª–æ–Ω–≥ –Ω–µ–±–µ–∑–ø–µ—á–Ω–∏–π';
  } else if (rsi < 30) {
    signal = 'OVERSOLD';
    reason = 'RSI < 30, —Ä–∏–Ω–æ–∫ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–∏–π, —à–æ—Ä—Ç –Ω–µ–±–µ–∑–ø–µ—á–Ω–∏–π';
  } else {
    // üîπ –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞ (EMA + RSI 45/55 + –æ–±‚Äô—î–º)
    if (trendUp && rsi > 55) {
      signal = strongVolume ? 'STRONG_LONG' : 'WEAK_LONG';
      reason = strongVolume
        ? 'EMA9 > EMA21, RSI > 55 —Ç–∞ –æ–±‚Äô—î–º –≤–∏—â–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ'
        : 'EMA9 > EMA21 —Ç–∞ RSI > 55, –∞–ª–µ –æ–±‚Äô—î–º —Å–ª–∞–±–∫–∏–π';
    } else if (trendDown && rsi < 45) {
      signal = strongVolume ? 'STRONG_SHORT' : 'WEAK_SHORT';
      reason = strongVolume
        ? 'EMA9 < EMA21, RSI < 45 —Ç–∞ –æ–±‚Äô—î–º –≤–∏—â–µ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ'
        : 'EMA9 < EMA21 —Ç–∞ RSI < 45, –∞–ª–µ –æ–±‚Äô—î–º —Å–ª–∞–±–∫–∏–π';
    }
  }

  // üîπ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ "—Å–∏–ª–∏" —Å–∏–≥–Ω–∞–ª—É

  let strength = 0; // –±–∞–∑–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
  if (trendUp || trendDown) strength += 20; // —Ç—Ä–µ–Ω–¥
  if (strongVolume) strength += 15; // –æ–±‚Äô—î–º

  // RSI –¥–ª—è –ª–æ–Ω–≥—É
  if (rsi > 55) strength += (rsi - 55) * 0.5;
  // –£–º–æ–≤–∞: RSI –±—ñ–ª—å—à–∏–π –∑–∞ 55 ‚Üí —Ä–∏–Ω–æ–∫ —Ç—Ä–æ—Ö–∏ –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–∏–π —ñ –ª–æ–Ω–≥ –±—ñ–ª—å—à —Å–∏–ª—å–Ω–∏–π.
  // –í–∏—Ä–∞—Ö–æ–≤—É—î–º–æ: (rsi - 55) ‚Üí –Ω–∞—Å–∫—ñ–ª—å–∫–∏ RSI –ø–µ—Ä–µ–≤–∏—â—É—î 55.
  // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ RSI = 65 ‚Üí 65 ‚àí 55 = 10
  // –ú–Ω–æ–∂–∏–º–æ –Ω–∞ 0.5: (rsi - 55) * 0.5 ‚Üí –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è, —â–æ–± –Ω–µ –¥–∞–≤–∞—Ç–∏ –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π –ø—Ä–∏—Ä—ñ—Å—Ç.
  // –ü—Ä–æ–¥–æ–≤–∂—É—é—á–∏ –ø—Ä–∏–∫–ª–∞–¥: 10 * 0.5 = +5
  // –†–µ–∑—É–ª—å—Ç–∞—Ç: strength –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –Ω–∞ 5, —Ç–æ–±—Ç–æ —Å–∏–≥–Ω–∞–ª —Å—Ç–∞—î —Å–∏–ª—å–Ω—ñ—à–∏–º –∑–∞–≤–¥—è–∫–∏ –≤–∏—Å–æ–∫–æ–º—É RSI.

  // RSI –¥–ª—è —à–æ—Ä—Ç—É
  if (rsi < 45) strength += (45 - rsi) * 0.5;
  // –£–º–æ–≤–∞: RSI –º–µ–Ω—à–∏–π –∑–∞ 45 ‚Üí —Ä–∏–Ω–æ–∫ —Ç—Ä–æ—Ö–∏ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–∏–π —ñ —à–æ—Ä—Ç –±—ñ–ª—å—à —Å–∏–ª—å–Ω–∏–π.
  // –í–∏—Ä–∞—Ö–æ–≤—É—î–º–æ: (45 - rsi) ‚Üí –Ω–∞—Å–∫—ñ–ª—å–∫–∏ RSI –º–µ–Ω—à–∏–π –∑–∞ 45.
  // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ RSI = 35 ‚Üí 45 ‚àí 35 = 10
  // –ú–Ω–æ–∂–∏–º–æ –Ω–∞ 0.5: (45 - rsi) * 0.5 ‚Üí —Ç–µ–∂ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è.
  // –ü—Ä–æ–¥–æ–≤–∂—É—é—á–∏ –ø—Ä–∏–∫–ª–∞–¥: 10 * 0.5 = +5
  // –†–µ–∑—É–ª—å—Ç–∞—Ç: strength –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –Ω–∞ 5, —Å–∏–≥–Ω–∞–ª —à–æ—Ä—Ç—É —Å—Ç–∞—î —Å–∏–ª—å–Ω—ñ—à–∏–º.

  return {
    module: 'trend',
    symbol,
    signal,
    reason,
    strength: parseFloat(strength.toFixed(1)),
    meta: {
      emaFast: parseFloat(emaFast.toFixed(2)),
      emaSlow: parseFloat(emaSlow.toFixed(2)),
      rsi: parseFloat(rsi.toFixed(2)),
      lastVolume,
      averageVolume: parseFloat(avgVolume.toFixed(2)),
      trend: trendUp ? 'UP' : trendDown ? 'DOWN' : 'FLAT',
    },
  };
}
